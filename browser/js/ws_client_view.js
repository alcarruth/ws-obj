// Generated by CoffeeScript 2.4.1
(function() {
  //!/bin/env coffee

  // ws_client.coffee

  var WS_Client_View, WebSocket, view_html;

  WebSocket = (typeof window !== "undefined" && window !== null ? window.WebSocket : void 0) || require('ws');

  
  //------------------------------------------------------------------------

  view_html = function(suffix) {
    return `<div id="ws-client-view-${suffix}" class="ws-client-view">\n  <h2> websocket object example </h2>\n  <form class="ws-client-form">\n    <p><textarea class="text-area" rows="10" cols="40"></textarea></p>\n    <p><text class="url"> </text></p>\n    <p>\n      <input type="button" class="set-button" value="Set">\n      <input type="button" class="disconnect-button" value="Disconnect">\n      <input type="button" class="connect-button" value="Connect">\n      <input id="color-picker-${suffix}" class="color-picker">\n      <input id="background-picker-${suffix}" class="background-picker">\n    </p>\n  </form>\n</div>`;
  };

  WS_Client_View = class WS_Client_View {
    constructor(parent_id, n, ws_obj) {
      var div;
      this.find = this.find.bind(this);
      this.write = this.write.bind(this);
      this.update = this.update.bind(this);
      this.connected = this.connected.bind(this);
      this.set_style = this.set_style.bind(this);
      this.n = n;
      this.ws_obj = ws_obj;
      this.parent = $(`#${parent_id}`);
      this.id = `ws-client-view-${this.n}`;
      div = document.createElement('div');
      div.innerHTML = view_html(this.n);
      this.parent.append(div);
      this.e = document.getElementById(this.id);
      this.jq = $('#' + this.id);
      //@ws_client_view = @find('ws-client-view')
      this.form = this.find('ws-client-form');
      this.text_area = this.find('text-area');
      this.url = this.find('url');
      this.url.value = this.ws_obj.url;
      this.set_button = this.find('set-button');
      this.set_button.onclick = () => {
        var obj;
        obj = JSON.parse(this.text_area.value || '{}');
        return this.ws_obj.set(obj);
      };
      this.connect_button = this.find('connect-button');
      this.connect_button.onclick = this.ws_obj.connect;
      this.disconnect_button = this.find('disconnect-button');
      this.disconnect_button.onclick = this.ws_obj.disconnect;
      this.connected(false);
      this.color_picker = $(`#color-picker-${this.n}`);
      this.background_picker = $(`#background-picker-${this.n}`);
      this.color_picker.spectrum({
        color: "#f00",
        move: (color) => {
          var obj;
          color = color.toHexString();
          obj = JSON.parse(this.text_area.value || '{}');
          obj.style.color = color;
          return this.ws_obj.set(obj);
        }
      });
      this.background_picker.spectrum({
        color: "#f00",
        move: (color) => {
          var obj;
          color = color.toHexString();
          obj = JSON.parse(this.text_area.value || '{}');
          obj.style.backgroundColor = color;
          return this.ws_obj.set(obj);
        }
      });
    }

    find(className) {
      return this.e.getElementsByClassName(className)[0];
    }

    write(obj) {
      this.text_area.value = obj.toString();
      return this.text_area.scrollTop = this.text_area.scrollHeight;
    }

    update(obj) {
      var k, ref, results, v;
      this.write(JSON.stringify(obj, null, 2));
      //$('#color-picker-1').spectrum("set", obj.style.color)
      //$('#background-picker-1').spectrum("set", obj.style.backgroundColor)
      this.color_picker.spectrum("set", obj.style.color);
      this.background_picker.spectrum("set", obj.style.backgroundColor);
      ref = obj.style || {};
      results = [];
      for (k in ref) {
        v = ref[k];
        results.push(this.e.style[k] = v);
      }
      return results;
    }

    connected(flag) {
      this.set_button.disabled = !flag;
      this.connect_button.disabled = flag;
      return this.disconnect_button.disabled = !flag;
    }

    set_style(style) {
      var k, results, v;
      results = [];
      for (k in style) {
        v = style[k];
        results.push(this.e.style[k] = v);
      }
      return results;
    }

  };

  if (typeof window !== "undefined" && window !== null) {
    window.WS_Client_View = WS_Client_View;
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/var/www/git/projects/ws_obj/src/coffee/ws_client_view.coffee