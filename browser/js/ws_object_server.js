// Generated by CoffeeScript 2.4.1
(function() {
  //!/usr/local/bin/coffee

  //  ws_object_server.coffee

  var WS_Object, WS_Object_Server, WebSocket, fs,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  WebSocket = require('ws');

  WS_Object = require('./ws_object.coffee').WS_Object;

  fs = require('fs');

  WS_Object_Server = class WS_Object_Server extends WS_Object {
    constructor(server, host, port, path, obj_file) {
      super();
      this.end = this.end.bind(this);
      this.start = this.start.bind(this);
      this.stop = this.stop.bind(this);
      this.load = this.load.bind(this);
      this.save = this.save.bind(this);
      this.update = this.update.bind(this);
      this.server = server;
      this.host = host;
      this.port = port;
      this.path = path;
      this.obj_file = obj_file;
      this.clients = {};
      this.next_id = 0;
      this.load();
      this.wss = new WebSocket.Server({
        server: this.server
      });
      this.wss.on('connection', (client) => {
        var id, msg;
        //id = client._ultron.id
        id = this.next_id;
        this.next_id += 1;
        console.log('client_' + id + ' connected.');
        this.clients[id] = client;
        client.client_id = id;
        client.onmessage = (msg) => {
          var args, method;
          [method, args] = JSON.parse(msg.data);
          console.log(method);
          return this[method](args, client);
        };
        client.onclose = (client) => {
          console.log('client_' + id + ' disconnected.');
          return delete this.clients[id];
        };
        msg = JSON.stringify([
          'init',
          {
            id: id
          }
        ]);
        return client.send(msg);
      });
    }

    end(args, client) {
      var id;
      boundMethodCheck(this, WS_Object_Server);
      id = args.id;
      console.log('client_' + id + ' disconnecting');
      client.close();
      return delete this.clients[id];
    }

    start() {
      boundMethodCheck(this, WS_Object_Server);
      if (this.server != null) {
        this.server.listen(this.port, this.host);
        return console.log(`listening at ${this.host}:${this.port}`);
      }
    }

    stop() {
      boundMethodCheck(this, WS_Object_Server);
      if (this.server != null) {
        return this.server.close();
      }
    }

    load() {
      boundMethodCheck(this, WS_Object_Server);
      return this.obj = JSON.parse(fs.readFileSync(this.obj_file, 'utf-8'));
    }

    save() {
      var obj_json;
      boundMethodCheck(this, WS_Object_Server);
      obj_json = JSON.stringify(this.obj, null, 3);
      return fs.writeFile(this.obj_file, obj_json, function(err) {
        return console.log(obj_json);
      });
    }

    update(args) {
      var client, i, id, k, len, ref, ref1, results, v, view;
      boundMethodCheck(this, WS_Object_Server);
      for (k in args) {
        v = args[k];
        this.obj[k] = v;
      }
      this.save();
      ref = this.clients;
      for (id in ref) {
        client = ref[id];
        console.log('updating client ' + id);
        client.send(JSON.stringify(['update', this.obj]));
      }
      ref1 = this.views;
      results = [];
      for (i = 0, len = ref1.length; i < len; i++) {
        view = ref1[i];
        results.push(view.update(args));
      }
      return results;
    }

  };

  exports.WS_Object_Server = WS_Object_Server;

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3Nfb2JqZWN0X3NlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiIsInNvdXJjZXMiOlsic3JjL2NvZmZlZS93c19vYmplY3Rfc2VydmVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7RUFBQTs7OztBQUFBLE1BQUEsU0FBQSxFQUFBLGdCQUFBLEVBQUEsU0FBQSxFQUFBLEVBQUE7SUFBQTs7RUFLQSxTQUFBLEdBQVksT0FBQSxDQUFRLElBQVI7O0VBQ1osU0FBQSxHQUFZLE9BQUEsQ0FBUSxvQkFBUixDQUE2QixDQUFDOztFQUMxQyxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVI7O0VBRUMsbUJBQU4sTUFBQSxpQkFBQSxRQUErQixVQUEvQjtJQUVFLFdBQWEsT0FBQSxNQUFBLE1BQUEsTUFBQSxVQUFBLENBQUE7O1VBd0JiLENBQUEsVUFBQSxDQUFBO1VBTUEsQ0FBQSxZQUFBLENBQUE7VUFLQSxDQUFBLFdBQUEsQ0FBQTtVQUlBLENBQUEsV0FBQSxDQUFBO1VBR0EsQ0FBQSxXQUFBLENBQUE7VUFLQSxDQUFBLGFBQUEsQ0FBQTtNQS9DYyxJQUFDLENBQUE7TUFBUSxJQUFDLENBQUE7TUFBTSxJQUFDLENBQUE7TUFBTSxJQUFDLENBQUE7TUFBTSxJQUFDLENBQUE7TUFFM0MsSUFBQyxDQUFBLE9BQUQsR0FBVyxDQUFBO01BQ1gsSUFBQyxDQUFBLE9BQUQsR0FBVztNQUNYLElBQUMsQ0FBQSxJQUFELENBQUE7TUFDQSxJQUFDLENBQUEsR0FBRCxHQUFPLElBQUksU0FBUyxDQUFDLE1BQWQsQ0FBcUI7UUFBQSxNQUFBLEVBQVEsSUFBQyxDQUFBO01BQVQsQ0FBckI7TUFFUCxJQUFDLENBQUEsR0FBRyxDQUFDLEVBQUwsQ0FBUSxZQUFSLEVBQXNCLENBQUMsTUFBRCxDQUFBLEdBQUE7QUFFcEIsWUFBQSxFQUFBLEVBQUEsR0FBQTs7UUFBQSxFQUFBLEdBQUssSUFBQyxDQUFBO1FBQ04sSUFBQyxDQUFBLE9BQUQsSUFBWTtRQUNaLE9BQU8s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QyxJQUFQLENBQVksSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFDLFFBQUQsRUFBVyxJQUFDLENBQUEsR0FBWixDQUFmLENBQVo7TUFGRjtBQUdBO0FBQUE7TUFBQSxLQUFBLHNDQUFBOztxQkFDRSxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVo7TUFERixDQUFBOztJQU5NOztFQWpEVjs7RUE0REEsT0FBTyxDQUFDLGdCQUFSLEdBQTJCO0FBckUzQiIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9sb2NhbC9iaW4vY29mZmVlXG4jXG4jICB3c19vYmplY3Rfc2VydmVyLmNvZmZlZVxuI1xuXG5XZWJTb2NrZXQgPSByZXF1aXJlKCd3cycpXG5XU19PYmplY3QgPSByZXF1aXJlKCcuL3dzX29iamVjdC5jb2ZmZWUnKS5XU19PYmplY3RcbmZzID0gcmVxdWlyZSgnZnMnKVxuXG5jbGFzcyBXU19PYmplY3RfU2VydmVyIGV4dGVuZHMgV1NfT2JqZWN0XG5cbiAgY29uc3RydWN0b3I6IChAc2VydmVyLCBAaG9zdCwgQHBvcnQsIEBwYXRoLCBAb2JqX2ZpbGUpIC0+XG4gICAgc3VwZXIoKVxuICAgIEBjbGllbnRzID0ge31cbiAgICBAbmV4dF9pZCA9IDBcbiAgICBAbG9hZCgpXG4gICAgQHdzcyA9IG5ldyBXZWJTb2NrZXQuU2VydmVyKHNlcnZlcjogQHNlcnZlcilcbiAgICBcbiAgICBAd3NzLm9uKCdjb25uZWN0aW9uJywgKGNsaWVudCkgPT5cbiAgICAgICNpZCA9IGNsaWVudC5fdWx0cm9uLmlkXG4gICAgICBpZCA9IEBuZXh0X2lkXG4gICAgICBAbmV4dF9pZCArPSAxXG4gICAgICBjb25zb2xlLmxvZygnY2xpZW50XycgKyBpZCArICcgY29ubmVjdGVkLicpXG4gICAgICBAY2xpZW50c1tpZF0gPSBjbGllbnRcbiAgICAgIGNsaWVudC5jbGllbnRfaWQgPSBpZFxuICAgICAgY2xpZW50Lm9ubWVzc2FnZSA9IChtc2cpID0+XG4gICAgICAgIFttZXRob2QsIGFyZ3NdID0gSlNPTi5wYXJzZShtc2cuZGF0YSlcbiAgICAgICAgY29uc29sZS5sb2cgbWV0aG9kXG4gICAgICAgIHRoaXNbbWV0aG9kXShhcmdzLCBjbGllbnQpXG4gICAgICBjbGllbnQub25jbG9zZSA9IChjbGllbnQpID0+XG4gICAgICAgIGNvbnNvbGUubG9nKCdjbGllbnRfJyArIGlkICsgJyBkaXNjb25uZWN0ZWQuJylcbiAgICAgICAgZGVsZXRlIEBjbGllbnRzW2lkXVxuICAgICAgbXNnID0gSlNPTi5zdHJpbmdpZnkoWyAnaW5pdCcsIHsgaWQ6IGlkfSBdKVxuICAgICAgY2xpZW50LnNlbmQobXNnKSlcblxuICBlbmQ6IChhcmdzLCBjbGllbnQpID0+XG4gICAgaWQgPSBhcmdzLmlkXG4gICAgY29uc29sZS5sb2coJ2NsaWVudF8nICsgaWQgKyAnIGRpc2Nvbm5lY3RpbmcnKVxuICAgIGNsaWVudC5jbG9zZSgpXG4gICAgZGVsZXRlIEBjbGllbnRzW2lkXVxuICAgIFxuICBzdGFydDogPT5cbiAgICBpZiBAc2VydmVyP1xuICAgICAgQHNlcnZlci5saXN0ZW4oQHBvcnQsIEBob3N0KVxuICAgICAgY29uc29sZS5sb2coXCJsaXN0ZW5pbmcgYXQgI3tAaG9zdH06I3tAcG9ydH1cIilcbiAgICAgIFxuICBzdG9wOiA9PlxuICAgIGlmIEBzZXJ2ZXI/XG4gICAgICBAc2VydmVyLmNsb3NlKClcblxuICBsb2FkOiA9PlxuICAgIEBvYmogPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhAb2JqX2ZpbGUsICd1dGYtOCcpKVxuICAgIFxuICBzYXZlOiA9PlxuICAgIG9ial9qc29uID0gSlNPTi5zdHJpbmdpZnkoQG9iaixudWxsLDMpXG4gICAgZnMud3JpdGVGaWxlKEBvYmpfZmlsZSwgb2JqX2pzb24sIChlcnIpIC0+XG4gICAgICBjb25zb2xlLmxvZyhvYmpfanNvbikpXG4gICAgXG4gIHVwZGF0ZTogKGFyZ3MpID0+XG4gICAgQG9ialtrXSA9IHYgZm9yIGssdiBvZiBhcmdzXG4gICAgQHNhdmUoKVxuICAgIGZvciBpZCxjbGllbnQgb2YgQGNsaWVudHNcbiAgICAgIGNvbnNvbGUubG9nKCd1cGRhdGluZyBjbGllbnQgJyArIGlkKVxuICAgICAgY2xpZW50LnNlbmQoSlNPTi5zdHJpbmdpZnkoWyd1cGRhdGUnLCBAb2JqXSkpXG4gICAgZm9yIHZpZXcgaW4gQHZpZXdzXG4gICAgICB2aWV3LnVwZGF0ZShhcmdzKVxuXG5cblxuZXhwb3J0cy5XU19PYmplY3RfU2VydmVyID0gV1NfT2JqZWN0X1NlcnZlclxuXG5cbiJdfQ==
//# sourceURL=/var/www/git/projects/ws_obj/src/coffee/ws_object_server.coffee